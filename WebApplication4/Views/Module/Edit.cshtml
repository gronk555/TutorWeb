@model WebApplication4.Controllers.CreateViewModel

@{
  ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Module", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
  @Html.AntiForgeryToken()

  <div class="form-horizontal">
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)

    @Html.Label("optional module icon, max 300x300 pixels:", new { @class = "control-label" })
    <input type="file" id="fileToUpload" name="file" />
    <span class="field-validation-error" id="spanfile"></span>
    <br />
    @if (Model.ImagePath != null)
    {
      <img src="@Model.ImagePath" alt="Image" style="max-height: 300px; max-width: 300px;" />
    }
    <br />
    <br />
    <div class="form-group">
      @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Name)
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.ForeignName, new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.ForeignName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ForeignName)
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.TextAreaFor(model => model.Description, 5, 200, null)
        @Html.ValidationMessageFor(model => model.Description)
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.ForeignDescription, new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.TextAreaFor(model => model.ForeignDescription, 5, 200, null)
        @Html.ValidationMessageFor(model => model.ForeignDescription)
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Price)
        @Html.ValidationMessageFor(model => model.Price)
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.NativeLang, new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DropDownListFor(model => model.NativeLang, Model.NativeLangList)
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.ForeignLang, new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DropDownListFor(model => model.ForeignLang, Model.ForeignLangList)
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Text, new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.TextAreaFor(model => model.Text, 20, 200, null)
        @Html.ValidationMessageFor(model => model.Text)
      </div>
    </div>

    <input type="file" id="file-input">

    <script id="phrase-template" type="text/x-phrase-template">
      <tr>
        <td title="Here must be a phrase in native language">@Model.NativeLang</td>
        <td><i class="fa fa-play" title="Click to play"></i></td>
        <td contenteditable="true" placeholder="example text ..."></td>
      </tr>
      <tr>
        <td title="Here must be the phrase in foreign language">@Model.ForeignLang</td>
        <td><i class="fa fa-play" title="Click to play"></i></td>
        <td contenteditable="true" placeholder="ejemplo de texto ..."></td>
      </tr>
      <tr>
        <td title="Here must be a helping message in native language">@Model.NativeLang</td>
        <td><i class="fa fa-play" title="Click to play"></i></td>
        <td contenteditable="true" placeholder="example of explanation ..."></td>
      </tr>
      <tr>
        <td title="Here must be a link to site with demo of the phrases"><i class="fa fa-link"></i></td>
        <td><i class="fa fa-play" title="Click to play"></i></td>
        <td contenteditable="true" placeholder="www.example.link.com"></td>
      </tr>
    </script>

    <div class="module-div">
      <table id="module-table"></table>
    </div>

    <div class="row">
      <div class="col-xs-6 col-sm-6 col-md-6 text-left">
        <a id="save_as_file" href="javascript:void(0);">Download as text file</a>
      </div>
      <div class="col-xs-6 col-sm-6 col-md-6 text-right">
        <a id="delete_all" href="javascript:void(0);">Delete all</a>
      </div>
    </div>

    @if (Model.IsAdmin)
    {
      <div class="form-group">
        @Html.LabelFor(model => model.Locked, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.CheckBoxFor(model => model.Locked)
        </div>
      </div>
    }

    <hr />
    <label>If your module uses languages that are not listed here, specify the code and translated name of the new language(s). You can also provide translations of UI elements to be displayed in Tutor mobile application. Just replace the english/spanish example translations with your own. These new language definitions are optional.</label>
    <div class="form-group">
      @Html.LabelFor(model => model.NewNativeLangCode, new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.NewNativeLangCode, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.NewNativeLangCode)
      </div>
    </div>
    <div class="form-group">
      @Html.LabelFor(model => model.NewNativeLangName, new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.NewNativeLangName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.NewNativeLangName)
      </div>
    </div>
    <div class="form-group">
      @Html.LabelFor(model => model.NewForeignLangCode, new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.NewForeignLangCode, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.NewForeignLangCode)
      </div>
    </div>
    <div class="form-group">
      @Html.LabelFor(model => model.NewForeignLangName, new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.NewForeignLangName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.NewForeignLangName)
      </div>
    </div>
    <div class="form-group">
      @Html.LabelFor(model => model.TransUILabels, new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.TextAreaFor(model => model.TransUILabels, 20, 200, null)
        @Html.ValidationMessageFor(model => model.TransUILabels)
      </div>
    </div>

    <div class="form-group">
      <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Save" class="btn btn-default" />
      </div>
    </div>
  </div>
}

<div>
  @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}
